<section id="options">
{
"language": "swift",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
When a class has its own functions, those functions are called __methods__.
</section>
<section id="instructions">
Add a method, `description`, to your `Animal` class.
Using two separate `print` statements, it should print out the `gender` and `legs` of the animal it's called on.
Then call `description` method.
</section>
<section id="fillEmptySpaces">
{
    "seed": ["class Animal {\n\tvar gender: String?\n\tvar legs = 4\n\n\t","[/]","[/]","() {\n\t\tif let gender = self.gender { print(gender) }\n\t\tprint(","[/]",".legs)\n\t}\n}\nlet dog = Animal()\ndog.gender = \"female\"\ndog.","[/]"],
	"buttons": [" description","func","description()","self","description[]","function","method"],
	"correct": "class Animal {\n\tvar gender: String?\n\tvar legs = 4\n\n\tfunc description() {\n\t\tif let gender = self.gender { print(gender) }\n\t\tprint(self.legs)\n\t}\n}\nlet dog = Animal()\ndog.gender = \"female\"\ndog.description()"
}
</section>
<section id="preOutput">
female
4
</section>