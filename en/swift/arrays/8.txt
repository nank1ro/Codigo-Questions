<section id="options">
{
"language": "swift",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
Array elements could be of any type, if we specify the `Any` type:
```
var arrayName: [Any] = ["one", 2, true]
```
In fact, above we have, in order, a string, an integer and a boolean.
But we can also have arrays with arrays as well!
</section>
<section id="instructions">
Print out a value from the array
</section>
<section id="fillEmptySpaces">
{
    "seed": ["var array1 = [\"a\", \"b\", \"c\"]\nvar array2 = [\"x\", \"y\", \"z\"]\nvar array3 = [array1, array2]\nprint(", "[/]", ")"],
	"buttons": ["array3", "array3[[2]]","array3[0][2][0]","array3[1][0]"],
	"correct": "var array1 = [\"a\", \"b\", \"c\"]\nvar array2 = [\"x\", \"y\", \"z\"]\nvar array3 = [array1, array2]\nprint(array3[1][0])"
}
</section>
<section id="preOutput">
x
</section>