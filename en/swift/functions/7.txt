<section id="options">
{
"language": "swift",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
You can define a _default_ value for any parameter in a function by assigning a value to the parameter after that parameter's type.
If a default value is defined, you can omit that parameter when calling the function
```
func someFunction(parameterWithoutDefault: Int, parameterWithDefault: Int = 12) {
	// do stuff here
}
```
</section>
<section id="instructions">
Complete the code in order to call the function without the _default_ argument
</section>
<section id="fillEmptySpaces">
{
    "seed": ["func sayHello(_ name: String","[/]","[/]",") {\n\tprint(\"Hello \\(name)!\")\n}\n","[/]","()"],
	"buttons": [" = ","\"World\"","sayHello", " == "],
	"correct": "func sayHello(_ name: String = \"World\") {\n\tprint(\"Hello \\(name)!\")\n}\nsayHello()"
}
</section>
<section id="preOutput">
Hello World!
</section>