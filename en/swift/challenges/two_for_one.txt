<section id="options">
{
"language": "swift",
"type": "runCode",
"showRun": true
}
</section>

<section id="description">
Given a name, return a string with the message:
`One for X, one for me.`
Where `X` is the given name.
However, if the name is missing, return the string:
`One for you, one for me.`
</section>

<section id="instructions">
Write a function that returns the correct string, examples:

**input**: `Walter`
**output**: `One for Walter, one for me.`

**input**: `James`
**output**: `One for James, one for me.`

**input**: `Martha`
**output**: `One for Martha, one for me.`
</section>

<section id="seed">
func two_for_one(name: String) -> String {
    
}
</section>

<section id="test">
import XCTest

class HelloWorldTests: XCTestCase {

    func test_no_name_given() {
        let expected = "One for you, one for me."
        XCTAssertEqual(two_for_one(), expected)
    }

    func test_a_name_given() {
        let expected = "One for James, one for me."
        XCTAssertEqual(two_for_one(name: "James"), expected)
    }

    func test_another_name_given() {
        let expected = "One for Martha, one for me."
        XCTAssertEqual(two_for_one(name: "Martha"), expected)
    }

    static var allTests: [(String, (HelloWorldTests) -> () throws -> Void)] {
        return [
            ("test_no_name_given", test_no_name_given),
            ("test_a_name_given", test_a_name_given),
            ("test_another_name_given", test_another_name_given),
        ]
    }
}

XCTMain([testCase(HelloWorldTests.allTests),])
</section>