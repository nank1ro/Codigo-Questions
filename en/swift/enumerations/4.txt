<section id="options">
{
"language": "swift",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
For some enumerations, it's useful to have a collection of all of that enumeration's cases.
You enable this by writing `: CaseIterable` after the enumeration's name.
Swift exposes a collection of all the cases as an `allCases` property of the enumeration type:
```
enum Colors: CaseIterable {
	case blue, red, green
}
for color in Colors.allCases {
    print(color)
}
// prints blue, red, green
```
</section>
<section id="instructions">
Iterate over the enumeration in order to print each case.
`$0` is a shortand argument name which can be used to refer to the values of the closure's arguments.
`$0` refers to the closure's first argument, `$1` to the second argument, and so on
</section>
<section id="fillEmptySpaces">
{
    "seed": ["enum Week: ","[/]"," {\n\tcase monday, tuesday, wednesday, thursday, friday, saturday, sunday\n}\nWeek.","[/]",".forEach { print($0) }"],
	"buttons": ["CaseIterable","caseIterable","allCases","AllCases","all","cases"],
	"correct": "enum Week: CaseIterable {\n\tcase monday, tuesday, wednesday, thursday, friday, saturday, sunday\n}\nWeek.allCases.forEach { print($0) }"
}
</section>
<section id="preOutput">
monday
tuesday
wednesday
thursday
friday
saturday
sunday
</section>