<section id="options">
{
"language": "swift",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
We can match individual enumeration values with a `switch` statement:
```
let color = Colors.red
switch color {
	case .blue:
		print("Blue")
	case .red:
		print("Red")
	case .green:
		print("Green")
}
// prints "Red"
```
Keep in mind that if you don't need to provide a `case` for every enumeration case, you can provide a `default` case to cover any cases that aren't addressed explicitly
</section>
<section id="instructions">
Complete the `switch` statement in order to cover all cases
</section>
<section id="fillEmptySpaces">
{
    "seed": ["let currentDay = Week.monday\n","[/]","[/]"," {\n\tcase .saturday, .","[/]",":\n\t\tprint(\"Weekend\")\n\t","[/]",":\n\t\tprint(\"Working day\")\n}"],
	"buttons": ["switch ","currentDay","sunday","default"],
	"correct": "let currentDay = Week.monday\nswitch currentDay {\n\tcase .saturday, .sunday:\n\t\tprint(\"Weekend\")\n\tdefault:\n\t\tprint(\"Working day\")\n}"
}
</section>
<section id="preOutput">
Working day
</section>