<section id="options">
{
"language": "python",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
When a class has its own functions, those functions are called __methods__. You've already seen one such method: `__init__()`.
But you can also define your own methods!
</section>
<section id="instructions">
Add a method, `description`, to your `Animal` class.
Using two separate `print` statements, it should print out the `gender` and `legs` of the animal it's called on.
Then call `description` method.
</section>
<section id="fillEmptySpaces">
{
    "seed": ["class Animal:\n\tdef __init__(self, gender, legs):\n\t\tself.gender = gender\n\t\tself.legs = legs\n\tdef ","[/]","(","[/]","):\n\t\t","[/]","(","[/]","[/]","[/]",")\n\t\t","[/]","(","[/]","[/]","[/]",")\n\ndog = Animal(\"female\", 5)\ndog.description()"],
	"buttons": ["description","self","Animal","print","print","self","self","gender","legs",".","."],
	"correct": "class Animal:\n\tdef __init__(self, gender, legs):\n\t\tself.gender = gender\n\t\tself.legs = legs\n\tdef description(self):\n\t\tprint(self.gender)\n\t\tprint(self.legs)\n\ndog = Animal(\"female\", 5)\ndog.description()"
}
</section>
<section id="preOutput">
female
5
</section>