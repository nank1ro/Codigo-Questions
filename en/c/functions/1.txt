<section id="options">
{
"language": "c",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
You might have considered the situation where you would like to reuse a piece of code, just with a few different values.
Instead of rewriting the whole code, it's much cleaner to define a function, which can then be used repeatedly.
In C we use the `return_type` followed by the `function` name, for example:
```
void say_hello() {
	printf("Hello!\n");
}

int main(void) {
	say_hello();
	// prints "Hello!"
	return 0;
}
```
</section>
<section id="instructions">
Complete the code in order to create a valid function called `say_hello` to a specific name
</section>
<section id="fillEmptySpaces">
{
	"seed": ["[/]", "[/]", "(", "[/]", "*name) {\n\tprintf(\"Hello ", "[/]", "!\\n\", name);\n}\n\nint main(void) {\n\tsay_hello(", "[/]", ");\n\treturn 0;\n}"],
	"buttons": ["void ", "say_hello", "char ", "string ", "%s", "%c", "name", "*name", "\"Tom\""],
	"correct": "void say_hello(char *name) {\n\tprintf(\"Hello %s!\\n\", name);\n}\n\nint main(void) {\n\tsay_hello(\"Tom\");\n\treturn 0;\n}"
}
</section>
<section id="preOutput">
Hello Tom!
</section>