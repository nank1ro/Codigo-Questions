<section id="options">
{
"language": "javascript",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
Functions can have multiple input parameters, which are written within the function's parentheses, separated by commas.
```
function sayHello(name, newUser) {
  var greet = `Hello ${name}!`;
  if (newUser) {
    greet += " Welcome on board :)";
  }
  return greet;
}
// prints "Hello Smith! Welcome on board :)"
console.log(sayHello("Smith", true));
```
</section>
<section id="instructions">
Complete the code in order to create a valid function called `sumAllNumbers` passing the following array of numbers `[15, 24, 31, 79]` and `true` to print the result
</section>
<section id="fillEmptySpaces">
{
    "seed": ["const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\nfunction sumAllNumbers(nums, ","[/]",") {\n\tlet result = nums.reduce(reducer);\n\tif (printResult) { ","[/]","(result); }\n\treturn result;\n}\n\nlet result = ","[/]","([15, 24, 31, ","[/]","], ","[/]",");"],
	"buttons": ["sumAllNumbers","sum","79","]","[","true","false","True","printResult","console.log","true"],
	"correct": "const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\nfunction sumAllNumbers(nums, printResult) {\n\tlet result = nums.reduce(reducer);\n\tif (printResult) { console.log(result); }\n\treturn result;\n}\n\nlet result = sumAllNumbers([15, 24, 31, 79], true);"
}
</section>
<section id="preOutput">
149
</section>