<section id="options">
{
"language": "python",
"type": "runCode",
"showRun": true
}
</section>

<section id="description">
James vorrebbe prelevare N euro da un bancomat.
Il bancomat accetterà la transazione solo se N è un multiplo di 5 e il conto di James ha abbastanza contante per eseguire il prelievo (incluse le commissioni bancarie).
Per ogni prelievo effettuato con successo, la banca addebita 0.50€.
Calcola il saldo del conto di James dopo un tentativo di transazione.
Gli input sono nell'ordine seguente:
1. la quantità di contanti che James desidera prelevare è nel seguente intervallo: `0 < N <= 2000`.
2. Il saldo iniziale di James viene fornito con due cifre decimali ed è nel seguente intervallo: `0 < B <= 2000`.
</section>

<section id="instructions">
Restituisci il saldo del conto, con due cifre decimali, dopo il tentativo di transazione.
Se non c'è abbastanza denaro nel conto per completare l'operazione, restituire il saldo bancario corrente.
</section>

<section id="seed">
def saldo_conto():
    return
</section>

<section id="test">
import unittest

from atm import saldo_conto


class ATMTest(unittest.TestCase):
    def test_successful_transaction(self):
        self.assertEqual(saldo_conto(50, 120.00), 69.50)

    def test_insufficient_funds(self):
        self.assertEqual(saldo_conto(200, 120.00), 120.00)

    def test_not_multiple_of_5(self):
        self.assertEqual(saldo_conto(22, 120.00), 120.00)


if __name__ == "__main__":
    unittest.main()
</section>
