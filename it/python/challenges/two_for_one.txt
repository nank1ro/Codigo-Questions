<section id="options">
{
"language": "python",
"type": "runCode",
"showRun": true
}
</section>

<section id="description">
Dato un nome, restituire una stringa con il messaggio:
`Uno per X, uno per me.`
Dove `X` e' il nome dato.
Tuttavia, se il nome manca, restituire la stringa:
`Uno per te, uno per me.`
</section>

<section id="instructions">
Scrivi una funzione che restituisca la stringa corretta, ad esempio:

**input**: `Walter`
**output**: `Uno per Walter, uno per me.`

**input**: `James`
**output**: `Uno per James, uno per me.`

**input**: `Martha`
**output**: `Uno per Martha, uno per me.`
</section>

<section id="seed">
def due_per_uno(nome):
	pass
</section>

<section id="test">
import unittest

from due_per_uno import due_per_uno

class TwoForOneTest(unittest.TestCase):
    def test_no_name_given(self):
        self.assertEqual(due_per_uno(), "Uno per te, uno per me.")

    def test_a_name_given(self):
        self.assertEqual(due_per_uno("James"), "Uno per James, uno per me.")

    def test_another_name_given(self):
        self.assertEqual(due_per_uno("Martha"), "Uno per Martha, uno per me.")

if __name__ == "__main__":
	unittest.main(exit=False)
</section>