<section id="options">
{
"language": "python",
"type": "fillEmptySpaces"
}
</section>
<section id="description">
Continuiamo con l'esempio precedente.
```
bel_tempo = True
if (bel_tempo):
	# gioca fuori
```
Abbiamo visto che l'istruzione `if` esegue il blocco di codice solo se la condizione e' `True`.
Un'altra cosa importante da considerare e' rappresentata dai **due punti** `:` e dall'**indentazione**, che indicano l'inizio di un blocco di codice.
L'indentazione si riferisce agli spazi all'inizio di una riga di codice.
Mentre in altri linguaggi di programmazione l'indentazione del codice e' a fini di leggibilit√†, in Python e' essenziale.
Potete usare il vostro numero di spazi preferito (2, 4, 6, 8), notando che il piu' utilizzato e' 4.
Qui nell'app, suggeriamo di usare il tasto **TAB** per indentare correttamente le linee di codice
</section>
<section id="instructions">
Sistema l'istruzione `if` aggiungendo i *due punti* `:`
</section>
<section id="fillEmptySpaces">
{
    "seed": ["time = 8\n","if (time < 12)","[/]", "\n", "\tprint(\"Mattina\")"],
	"buttons": ["if","==", "=","else","?",":"],
	"correct": "time = 8\nif (time < 12):\n\tprint(\"Mattina\")"
}
</section>
<section id="preOutput">
Mattina
</section>
